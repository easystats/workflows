# To understand the aim and scope of this workflow, have a look at these slides:
# https://indrajeetpatil.github.io/preventive-r-package-care/

# name: test-coverage-examples

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test-coverage-examples:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: "3.1.7"

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          pak-version: devel
          upgrade: '"TRUE"'
          extra-packages: |
            r-lib/covr
            any::BH
            local::.
            cplm=?ignore
            panelr=?ignore
            speedglm=?ignore

      - name: Test example coverage
        run: |
          options(crayon.enabled = TRUE)
          library(covr)
          coverage <- covr::package_coverage(
            type = c("examples", "vignettes"),
            quiet = TRUE,
            commentDonttest = FALSE,
            commentDontrun = FALSE
          )
          print(coverage)
          percent_coverage <- covr::percent_coverage(coverage)
          threshold <- 50
          cli::cli_rule()
          if (percent_coverage < threshold) {
            cli::cli_abort("Code coverage using examples is below the required threshold ({threshold}%).")
          } else {
            cli::cli_alert_success("Code coverage using examples is above the required threshold ({threshold}%).")
          }
          cli::cli_rule()
        shell: Rscript {0}
